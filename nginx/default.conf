# Cache zone
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream nextjs {
  server nextjs:3000;
}

http {
  server {
      listen 80;
      listen [::]:80;

      server_name bomsbro.com www.bomsbro.com;
      server_tokens off;

      #Redirect to 443
      location / {
        return 301 https://$host$request_uri;
      }

      location /.well-known/acme-challenge/ {
          root /var/www/certbot;
      }
  }

  server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default server;

    server_name bomsbro.com www.bomsbro.com;
    server_tokens off;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;

    #WebApp Path
    location / {
      proxy_pass         http://locahost:3000;
      proxy_redirect     off;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Host $server_name;
    }

    #Api Path
    location /api { # 이 부분은 api라는 uri로 통신 시 백엔드에 프록시 처리를 하기 위함
        proxy_pass         http://192.168.50.193:8081;;
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
    }
    ssl_certificate /etc/letsencrypt/live/YOUR_DOMAIN_ADDRESS/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/YOUR_DOMAIN_ADDRESS/privkey.pem;
  }
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}
